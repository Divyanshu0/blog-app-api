package com.self.blog.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ser.std.StdKeySerializers.Default;
import com.self.blog.payloads.PostDto;
import com.self.blog.payloads.PostResponse;
import com.self.blog.services.PostService;

@RestController
@RequestMapping("/api")
public class PostController {

	@Autowired
	PostService postService;

	@PostMapping("/user/{userId}/category/{categoryId}/posts")
	ResponseEntity<PostDto> createPost(@RequestBody PostDto postDto, @PathVariable Integer userId,
			@PathVariable Integer categoryId) {
		PostDto createPost = postService.createPost(postDto, userId, categoryId);
		return new ResponseEntity<>(createPost, HttpStatus.CREATED);
	}

	@GetMapping("/category/{categoryId}/posts")
	List<PostDto> getAllPostByCategory(@PathVariable Integer categoryId) {
		return postService.getPostByCategory(categoryId);
	}

	@GetMapping("/user/{userId}/posts")
	List<PostDto> getAllPostByUser(@PathVariable Integer userId) {
		return postService.getPostByUser(userId);
	}

	@GetMapping("/post/{id}")
	public PostDto findById(@PathVariable("id") int id) {
		return postService.getPostById(id);

	}

	@PutMapping("posts/{id}")
	public PostDto updatePost(@RequestBody PostDto postDto, @PathVariable Integer id) {
		return postService.updatePost(postDto, id);
	}

	@DeleteMapping("/post/{id}")
	public void deletePost(@PathVariable Integer id) {
		postService.deletePost(id);
	}

	@DeleteMapping("/post")
	public void deleteAllPosts() {
		postService.deleteAllPosts();
	}

	@GetMapping("/post")
	public PostResponse findAll(
			@RequestParam(value = "pageNumber", defaultValue = "1", required = false) Integer pageNumber,
			@RequestParam(value = "pageSize", defaultValue = "2", required = false) Integer pageSize,
			@RequestParam(value = "sortBy", defaultValue = "postId", required = false) String sortBy,
			@RequestParam(value = "sortDir", defaultValue = "asc", required = false) String sortDir) {
		return postService.findAllPosts(pageNumber, pageSize, sortBy, sortDir);
	}
	
	@GetMapping("/post/search/{keyword}")
	public List<PostDto> searchByKeyword(@PathVariable String keyword){
		return postService.searchPost(keyword);
		
	}
	public boolean get() {
		boolean a = true;
		boolean b =  false;
		String txt = "ff";
		if(txt!= null) {
			return a;
		}
		else {
			return b;
		}
	}

}
